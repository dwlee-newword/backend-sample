// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  name        String?
  is_admin    Boolean      @default(false)
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  user_detail user_detail?
}

model user_detail {
  user_id    Int      @id @unique
  address    String
  phone      String
  rent_count Int      @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       user     @relation(fields: [user_id], references: [id])
}

model book {
  id         Int      @id @default(autoincrement())
  title      String
  author     String
  summary    String
  issn       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model rent {
  id         Int        @id @default(autoincrement())
  user_id    Int
  book_id    Int
  rent_state RENT_STATE
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model room {
  id         Int      @id @default(autoincrement())
  floor      Int
  number     Int
  capacity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model room_reservation {
  id           Int          @id @default(autoincrement())
  room_id      Int
  user_id      Int
  reserve_time Float
  start_time   RESERVE_TIME
  end_time     RESERVE_TIME
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
}

enum RENT_STATE {
  PENDING
  ACCEPTED
  REJECTED
  RETURNED
}

enum RESERVE_TIME {
  AM_00_00
  AM_00_30
  AM_01_00
  AM_01_30
  AM_02_00
  AM_02_30
  AM_03_00
  AM_03_30
  AM_04_00
  AM_04_30
  AM_05_00
  AM_05_30
  AM_06_00
  AM_06_30
  AM_07_00
  AM_07_30
  AM_08_00
  AM_08_30
  AM_09_00
  AM_09_30
  AM_10_00
  AM_10_30
  AM_11_00
  AM_11_30
  PM_12_00
  PM_12_30
  PM_01_00
  PM_01_30
  PM_02_00
  PM_02_30
  PM_03_00
  PM_03_30
  PM_04_00
  PM_04_30
  PM_05_00
  PM_05_30
  PM_06_00
  PM_06_30
  PM_07_00
  PM_07_30
  PM_08_00
  PM_08_30
  PM_09_00
  PM_09_30
  PM_10_00
  PM_10_30
  PM_11_00
  PM_11_30
}
